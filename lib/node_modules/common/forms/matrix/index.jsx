import React from 'react';

import Button from 'common/components/button';
import FormRow from 'common/forms/form-row';
import Container from 'common/components/container';

class Matrix extends React.Component {
  static propTypes = {
    name: React.PropTypes.string,
    label: React.PropTypes.string,
    error: React.PropTypes.string,
    fields: React.PropTypes.object,
    specification: React.PropTypes.array,
  };

  render() {
    const { specification, label, fields, error } = this.props;

    const rows = specification.map((row, specIndex) => (
      <div className="matrix__row" key={specIndex}>
        <Container>
          {
            Object.keys(fields).map((key, fieldIndex) => {
              const field = fields[key];
              const implicitProps = key.split('.').reduce((prev, curr) => prev[curr], row);

              return (
                <FormRow key={fieldIndex}>
                  <field.component
                    label={field.label}
                    id={implicitProps.name}
                    {...implicitProps}
                    {...field.explicitProps}
                  />
                </FormRow>
              );
            })
          }
        </Container>

        <Container>
          <Button theme="danger" onClick={() => specification.removeField(specIndex)}>
            <span className="icon--minus" />
            Remove {label}
          </Button>
        </Container>
      </div>
    ));

    return (
      <div className="matrix">
        <Button onClick={() => specification.addField()}>
          <span className="icon--plus" />
          Add {label}
        </Button>

        {!!error ?
          <span className="matrix__error">{error}</span>
        : null}

        {rows}
      </div>
    );
  }
}

export default Matrix;
