import React from 'react';
import { reduxForm } from 'redux-form';

import Button from 'common/components/button';
import Form from 'common/forms/form';
import FormRow from 'common/forms/form-row';
import FieldInput from 'common/forms/field-input';
import FieldTextarea from 'common/forms/field-textarea';
import FieldDropdown from 'common/forms/field-dropdown';
import FieldInputSelect from 'common/forms/field-input-select';
import Container from 'common/components/container';
import FieldSearchModal from 'common/forms/field-search-modal';

import {
  showDeviceTypeModal,
  hideDeviceTypeModal,
  storeDeviceTypeValue,
  clearDeviceTypeValue } from 'common/actions/devices';

const fields = [
  'name',
  'description',
  'deviceType',
  'visibility',
  'address',
];

class DeviceForm extends React.Component {
  static propTypes = {
    deviceTypeModal: React.PropTypes.object,
    cta: React.PropTypes.string,
    handleSubmit: React.PropTypes.func,
    fields: React.PropTypes.object,
    dispatch: React.PropTypes.func,
  };

  componentWillUnmount() {
    const { dispatch } = this.props;

    dispatch(clearDeviceTypeValue());
    dispatch(hideDeviceTypeModal());
  }

  showDeviceTypeModal = () => {
    const { dispatch } = this.props;

    dispatch(showDeviceTypeModal());
  }

  hideDeviceTypeModal = () => {
    const { dispatch } = this.props;

    dispatch(hideDeviceTypeModal());
  }

  storeDeviceTypeValue = (data) => {
    const { dispatch } = this.props;

    dispatch(storeDeviceTypeValue(data));
  }

  render() {
    const {
      fields: {
        name, description, deviceType, visibility, address,
      }, handleSubmit, cta, deviceTypeModal,
    } = this.props;

    const filterSpecification = {
      name: {
        label: 'Name',
        component: FieldInput,
      },
      developer: {
        label: 'Developer',
        component: FieldInput,
      },
      deviceClass: {
        label: 'Device Class',
        component: FieldDropdown,
        props: {
          options: {
            '': 'Any',
            input: 'Input',
            output: 'Output',
          },
        },
      },
      sort: {
        label: 'Sort',
        component: FieldDropdown,
        props: {
          options: {
            '': 'Default',
            name: 'Name',
            developer: 'Developer',
            deviceClass: 'Device Class',
          },
        },
      },
      order: {
        label: 'Order',
        component: FieldDropdown,
        props: {
          options: {
            '': 'Default',
            asc: 'Ascending',
            desc: 'Descending',
          },
        },
      },
    };

    const tableColumns = {
      name: 'Name',
      developer: 'Developer',
      deviceClass: 'Device Class',
    };

    const tableRows = {
      name: 'name',
      developer: 'developer',
      deviceClass: 'deviceClass',
    };

    return (
      <div>
        {deviceTypeModal.visible ?
          <FieldSearchModal
            title="Device Type"
            filterSpecification={filterSpecification}
            handleCancel={this.hideDeviceTypeModal}
            handleSelect={this.storeDeviceTypeValue}
            tableColumns={tableColumns}
            tableRows={tableRows}
            endpoint="/device-types"
          />
        : null}
        <Form onSubmit={handleSubmit}>
          <Container>
            <FormRow>
              <FieldInput
                id="name"
                label="Name"
                {...name}
              />
            </FormRow>
            <FormRow>
              <FieldTextarea
                id="description"
                label="Description"
                {...description}
              />
            </FormRow>
            <FormRow>
              <FieldInputSelect
                id="deviceType"
                label="Device Type"
                handleClick={this.showDeviceTypeModal}
                display={deviceTypeModal.label}
                {...deviceType}
                value={deviceTypeModal.value}
              />
            </FormRow>
            <FormRow>
              <FieldDropdown
                id="visibility"
                label="Visibility"
                options={{
                  private: 'Private',
                  public: 'Public',
                }}
                {...visibility}
              />
            </FormRow>
            <FormRow>
              <FieldInput
                id="address"
                label="Address"
                {...address}
              />
            </FormRow>
          </Container>
          <FormRow>
            <Button type="submit">{cta}</Button>
          </FormRow>
        </Form>
      </div>
    );
  }
}

const DecoratedDeviceForm = reduxForm({
  form: 'device',
  fields,
}, (state) => ({
  deviceTypeModal: state.devices.deviceTypeModal,
}))(DeviceForm);

export default DecoratedDeviceForm;
