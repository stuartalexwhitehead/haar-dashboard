import React from 'react';
import { reduxForm } from 'redux-form';

import Button from 'common/components/button';
import Form from 'common/forms/form';
import FormRow from 'common/forms/form-row';
import FieldInput from 'common/forms/field-input';
import FieldDropdown from 'common/forms/field-dropdown';
import Container from 'common/components/container';

const fields = [
  'name.given',
  'name.family',
  'username',
  'password',
  'email',
  'role',
];

class UserForm extends React.Component {
  static propTypes = {
    showRole: React.PropTypes.bool,
    cta: React.PropTypes.string,
    handleSubmit: React.PropTypes.func,
    fields: React.PropTypes.object,
  };

  static defaultProps = {
    showRole: false,
  };

  render() {
    const {
      fields: {
        name, username, password, email, role,
      }, handleSubmit, cta, showRole,
    } = this.props;

    return (
      <Form onSubmit={handleSubmit}>
        <FormRow>
          <FieldInput
            id="name.given"
            label="First Name"
            {...name.given}
          />
        </FormRow>
        <FormRow>
          <FieldInput
            id="name.family"
            label="Last Name"
            {...name.family}
          />
        </FormRow>
        <FormRow>
          <FieldInput
            id="username"
            label="Username"
            {...username}
          />
        </FormRow>
        <FormRow>
          <FieldInput
            id="password"
            label="Password"
            type="password"
            {...password}
          />
        </FormRow>
        <FormRow>
          <FieldInput
            id="email"
            label="Email Address"
            {...email}
          />
        </FormRow>
        {showRole ?
          <FormRow>
            <FieldDropdown
              id="role"
              label="Role"
              options={{
                user: 'User',
                admin: 'Admin',
              }}
              {...role}
            />
          </FormRow>
        : null}
        <Container>
          <Button type="submit">{cta}</Button>
        </Container>
      </Form>
    );
  }
}

const DecoratedUserForm = reduxForm({
  form: 'user',
  fields,
})(UserForm);

export default DecoratedUserForm;
