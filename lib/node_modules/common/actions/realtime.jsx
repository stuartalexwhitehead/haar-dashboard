export function openRealtimeConnection(connection) {
  return {
    type: 'OPEN_REALTIME_CONNECTION',
    connection,
  };
}

export function closeRealtimeConnection() {
  return {
    type: 'CLOSE_REALTIME_CONNECTION',
  };
}

export function initiateRealtimeConnection(Primus) {
  return function initiateRealtimeConnectionThunk(dispatch, getState) {
    const { auth } = getState();

    if (Primus) {
      const primus = Primus.connect(`${process.env.API__URL}?token=${auth.token}`);

      primus.on('open', () => {
        dispatch(openRealtimeConnection(primus));
      });

      return Promise.resolve('Realtime connection was opened.');
    }

    return Promise.reject('Realtime connection could not be opened.');
  };
}
