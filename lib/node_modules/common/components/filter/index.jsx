import React from 'react';
import { reduxForm } from 'redux-form';

import Button from 'common/components/button';
import Form from 'common/forms/form';
import FormRow from 'common/forms/form-row';

class Filter extends React.Component {
  static propTypes = {
    filterFor: React.PropTypes.string,
    specification: React.PropTypes.object,
    handleSubmit: React.PropTypes.func,
    fields: React.PropTypes.object,
  };

  static defaultProps = {
    specification: [],
  };

  getFormRows = () => {
    const { fields, specification } = this.props;

    return Object.keys(specification).map((key, specIndex) => {
      const field = specification[key];
      const implicitProps = key.split('.').reduce((prev, curr) => prev[curr], fields);

      return (
        <FormRow key={specIndex}>
          <field.component
            label={field.label}
            id={implicitProps.name}
            {...implicitProps}
            {...field.props}
          />
        </FormRow>
      );
    });
  }

  render() {
    const { filterFor, handleSubmit } = this.props;
    const formRows = this.getFormRows();

    return (
      <div className="filter">
        <div className="filter__title">Filter {filterFor}</div>
        <div className="filter__fields">
          <Form onSubmit={handleSubmit}>
            {formRows}
            <FormRow>
              <Button type="submit">Filter</Button>
            </FormRow>
          </Form>
        </div>
      </div>
    );
  }
}

const DecoratedFilter = reduxForm({
  form: 'filter',
})(Filter);

export default DecoratedFilter;
