import React from 'react';

class ResponsiveTable extends React.Component {
  static propTypes = {
    columns: React.PropTypes.object.isRequired,
    data: React.PropTypes.array.isRequired,
  };

  static defaultProps = {
    columns: {},
    data: [],
  };

  getMobileRows = () => {
    const { columns, data } = this.props;

    return data.map((row, rowIndex) => (
      <tbody key={rowIndex}>
        {
          Object.keys(columns).map((column, index) => (
            <tr key={index}>

              {index > 0 ?
                <td>{columns[column]}</td>
              : null}

              <td colSpan={index > 0 ? '1' : '2'}>{row[column]}</td>
            </tr>
          ))
        }
      </tbody>
    ));
  }

  getDesktopHeadings = () => {
    const { columns } = this.props;

    return (
      <tr>
        {
          Object.keys(columns).map((key, index) => <th key={index}>{columns[key]}</th>)
        }
      </tr>
    );
  }

  getDesktopRows = () => {
    const { columns, data } = this.props;

    return data.map((row, i) => (
      <tr key={i}>
        {
          Object.keys(columns).map((column, j) => <td key={j}>{row[column]}</td>)
        }
      </tr>
    ));
  }

  render() {
    return (
      <div className="responsive-table">
        <table className="responsive-table--s">
          {this.getMobileRows()}
        </table>
        <table className="responsive-table--l">
          <thead>
            {this.getDesktopHeadings()}
          </thead>
          <tbody>
            {this.getDesktopRows()}
          </tbody>
        </table>
      </div>
    );
  }
}

export default ResponsiveTable;
