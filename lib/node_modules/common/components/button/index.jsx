import React from 'react';

import classnames from 'classnames';

import DLink from 'common/components/d-link';

class Button extends React.Component {
  static propTypes = {
    type: React.PropTypes.string,
    to: React.PropTypes.string,
    size: React.PropTypes.oneOf(['small', 'medium', 'large']),
    theme: React.PropTypes.oneOf(['standard', 'danger', 'inverted']),
    fullWidth: React.PropTypes.bool,
    className: React.PropTypes.string,
    href: React.PropTypes.string,
    children: React.PropTypes.oneOfType([
      React.PropTypes.element,
      React.PropTypes.array,
    ]),
  };

  static defaultProps = {
    type: 'button',
    theme: 'standard',
    size: 'medium',
    fullWidth: false,
  };

  render() {
    const { type, children, to, href, theme, fullWidth, className, size, ...rest } = this.props;

    const conditionalClasses = {
      'button--full-width': fullWidth,
    };

    if (className) {
      conditionalClasses[className] = !!className;
    }

    const classes = classnames(
      'button',
      `button--${theme}`,
      `button--${size}`,
      conditionalClasses
    );

    if (!!href) {
      return <a href={href} className={classes} {...rest}>{children}</a>;
    }

    if (!!to) {
      return <DLink to={to} className={classes} {...rest}><span>{children}</span></DLink>;
    }

    return <button type={type} className={classes} {...rest}>{children}</button>;
  }
}

export default Button;
