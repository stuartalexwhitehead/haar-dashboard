import React from 'react';
import { connect } from 'react-redux';

import DashboardHeader from 'common/components/dashboard-header';
import UserForm from 'common/forms/user-form';

import { editUser, fetchUser, clearEditUser } from 'common/actions/users';

class EditUser extends React.Component {
  static requireAdmin = true;
  static needs = [
    fetchUser,
  ];

  static propTypes = {
    meta: React.PropTypes.object,
    user: React.PropTypes.object,
    status: React.PropTypes.string,
    dispatch: React.PropTypes.func,
    params: React.PropTypes.object,
  }

  componentWillMount() {
    const { user, params, dispatch } = this.props;

    if (!user) {
      dispatch(fetchUser({
        segments: params,
      }));
    }
  }

  componentWillUnmount() {
    const { dispatch } = this.props;

    dispatch(clearEditUser());
  }

  handleSubmit = (data) => {
    const { dispatch, params } = this.props;

    return dispatch(editUser({
      segments: params,
      data,
    }));
  }

  render() {
    const { user } = this.props;

    return (
      <div>
        <DashboardHeader title="Edit User" />

        {!!user ?
          <UserForm
            onSubmit={this.handleSubmit}
            cta="Update"
            initialValues={user}
            showRole
          />
        : null}
      </div>
    );
  }
}

const mapStateToProps = (state) => ({
  status: state.users.edit.status,
  meta: state.users.edit.meta,
  user: state.users.edit.user,
});

export default connect(mapStateToProps)(EditUser);
